{"version":3,"sources":["webpack:///./src/app/components/pages-plain/login-form/login.form.component.html","webpack:///./src/app/components/pages-plain/login-form/login.form.component.scss","webpack:///./src/app/components/pages-plain/login-form/login.form.component.ts","webpack:///./src/app/components/pages-plain/pages.module.ts","webpack:///./src/app/containers/login/login.component.html","webpack:///./src/app/containers/login/login.component.ts","webpack:///./src/app/containers/login/model/login.model.ts","webpack:///./src/app/containers/login/service/login.service.ts"],"names":[],"mappings":"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","file":"components-pages-plain-pages-module.js","sourcesContent":["module.exports = \"<div class=\\\"app flex-row align-items-center\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"card-group mb-0\\\">\\n          <div class=\\\"card p-4\\\">\\n            <form #loginForm=\\\"ngForm\\\">\\n              <div class=\\\"card-body\\\">\\n                <h1>เข้าสู่ระบบ</h1>\\n                <p class=\\\"text-muted\\\">เข้าสู่ระบบการขาย</p>\\n                <div class=\\\"error-message no-padding float-lef \\\" name=\\\"required-field\\\" *ngIf=\\\"errorMessage\\\">\\n                  {{errorMessage}}\\n                </div>\\n                <div class=\\\"input-group mb-3\\\">\\n                  <span class=\\\"input-group-addon\\\">\\n                    <i class=\\\"icon-user\\\"></i>\\n                  </span>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                    id= \\\"username\\\" \\n                    #usernameRef=\\\"ngModel\\\" \\n                    ngModel required \\n                    name=\\\"username\\\" \\n                    [(ngModel)]=\\\"username\\\" placeholder=\\\"ชื่อผู้ใช้\\\">\\n                  <div class=\\\"error-message no-padding float-lef \\\" name=\\\"required-field\\\" *ngIf=\\\"!usernameRef.valid && usernameRef.dirty\\\">\\n                    กรุณาระบุชื่อผู้ใช้\\n                  </div>\\n                </div>\\n                <div class=\\\"input-group mb-4\\\">\\n                  <span class=\\\"input-group-addon\\\">\\n                    <i class=\\\"icon-lock\\\"></i>\\n                  </span>\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" \\n                    id=\\\"password\\\" \\n                    ngModel required \\n                    #passwordRef=\\\"ngModel\\\" \\n                    name=\\\"password\\\"  \\n                    [(ngModel)]=\\\"password\\\" \\n                    placeholder=\\\"รหัสผ่น\\\">\\n                  <div class=\\\"error-message no-padding float-lef \\\" name=\\\"required-field\\\" *ngIf=\\\"!passwordRef.valid && passwordRef.dirty\\\">\\n                    กรุณาระบุชื่อรหัสผ่าน\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-6\\\">\\n                    <button type=\\\"submit\\\" \\n                      (click)=\\\"loginSubmit(loginForm)\\\" \\n                      id=\\\"btnLogin\\\" \\n                      [disabled]=\\\"loginForm.invalid\\\"\\n                      class=\\\"btn btn-primary px-4\\\">เข้าสู่ระบบ</button>\\n                  </div>\\n                  <!-- <div class=\\\"col-6 text-right\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-link px-0\\\">Forgot password?</button>\\n                  </div> -->\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <!-- <div class=\\\"card text-white bg-primary py-5 d-md-down-none\\\" style=\\\"width:44%\\\">\\n            <div class=\\\"card-body text-center\\\">\\n              <div>\\n                <h2>Sign up</h2>\\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n                  magna aliqua.</p>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary active mt-3\\\">Register Now!</button>\\n              </div>\\n            </div>\\n          </div> -->\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZXMtcGxhaW4vbG9naW4tZm9ybS9sb2dpbi5mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Output, Input } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { LoginModel } from '../../../containers/login/model/login.model';\n\n@Component({\n  selector: 'app-login-component',\n  templateUrl: './login.form.component.html',\n  styleUrls: ['./login.form.component.scss']\n})\nexport class LoginFormComponent {\n  @Output() login: EventEmitter<LoginModel> = new EventEmitter();\n  @Input() errorMessage: string;\n  public username;\n  public password;\n\n  loginSubmit(data: NgForm) {\n    const loginModel: LoginModel = new LoginModel(data.value.username, data.value.password);\n    this.login.emit(loginModel);\n  }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { LoginComponent } from '../../containers/login/login.component';\nimport { LoginFormComponent } from '../../components/pages-plain/login-form/login.form.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { NgxBarcodeModule } from 'ngx-barcode';\nconst routes: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Pages'\n        },\n        children: [\n            {\n                path: 'login',\n                component: LoginComponent,\n                data: {\n                    title: 'Login Page'\n                }\n            }\n        ]\n    }\n];\n@NgModule({\n    imports: [\n        FormsModule,\n        RouterModule.forChild(routes),\n        CommonModule,\n        NgxBarcodeModule\n    ],\n    declarations: [\n        LoginComponent,\n        LoginFormComponent\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class PagesModule { }\n","module.exports = \"<p>\\n    <app-login-component [(errorMessage)]=\\\"errorMessage\\\" (login)=\\\"loginSubmit($event)\\\"></app-login-component>\\n</p>\"","import { Component } from '@angular/core';\nimport { LoginService } from './service/login.service';\nimport { LoginModel } from './model/login.model';\n\n@Component({\n  providers: [LoginService],\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\n\nexport class LoginComponent {\n  public errorMessage: string;\n  constructor(private loginService: LoginService) { }\n  loginSubmit(event: LoginModel) {\n    // this.loginService.loginApi(event);\n    this.errorMessage = \"\";\n    this.loginService.loginApi2(event).catch((res) => {\n      this.setErrorLoginMessage(res);\n    });\n  }\n\n  setErrorLoginMessage(res) {\n    if (res.status === 401) {\n      this.errorMessage = \"ชื่อผู้ใช้หรือรหัสผ่านไม่ถูกต้อง\";\n    } else if (res.status === 404 || res.status === 0) {\n      this.errorMessage = \"ไม่พบการเชื่อมต่อ\";\n    } else if (res.status === 400 ||\n      res.status === 422 ||\n      res.status === 500 ||\n      res.status === 403) {\n      this.errorMessage = \"พบข้อผิดพลาด กรุณาติดต่อผู้ดูแลระบบ\";\n    }\n  }\n}\n","export class LoginModel {\n    public username: string;\n    public password: string;\n    constructor(username: string, password: string) {\n        this.username = username;\n        this.password = password;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationService } from '../../../services/user/authentication-service.service';\nimport { LoginModel } from '../model/login.model';\n\n@Injectable()\nexport class LoginService {\n\n    constructor(private http: HttpClient, private authenticationService: AuthenticationService) { }\n    loginApi(data: LoginModel) {\n        return this.authenticationService.login(data.username, data.password);\n    }\n\n    loginApi2(data: LoginModel) {\n        return this.authenticationService.login2(data.username, data.password);\n    }\n}\n"],"sourceRoot":""}